{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mythi\\\\OneDrive\\\\Documents\\\\assignment\\\\frontend\\\\src\\\\TextInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { submitText, getConnectionCount } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInput = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState('');\n  const [recentStrings, setRecentStrings] = useState([]);\n  const handleSubmit = async () => {\n    try {\n      // Send text to the backend for processing and result\n      const response = await axios.post('http://localhost:3000/api/submit-text', {\n        text: inputText\n      });\n\n      // Update the state with the result\n      setResult(response.data.result);\n\n      // Save the submitted text data to the database\n      const textDataResponse = await axios.post('http://localhost:3000/api/submit-text-data', {\n        text: inputText\n      });\n\n      // Log the connection\n      await axios.get('http://localhost:3000/api/log-connection');\n      const connectionCount = await getConnectionCount();\n      console.log('Number of connections:', connectionCount);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchRecentStrings = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/get-recent-strings');\n      setRecentStrings(response.data.recentStrings);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchNgrams = async () => {\n    try {\n      console.log('Recent Strings:', recentStrings); // Check if recentStrings is populated\n      const response = await axios.post('http://localhost:8000/api/process-ngrams', {\n        strings: recentStrings\n      }, {\n        headers: {\n          'Content-Type': 'application/json' // Set the content type to JSON\n        }\n      });\n\n      console.log(response.data.ngrams);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Text\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: fetchRecentStrings,\n      children: \"Get Recent 2 Strings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: fetchNgrams,\n      children: \"Process Ngrams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Strings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recentStrings.map((recentString, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: recentString\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ngram Comparison Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ngramResults.map((ngramResult, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: Object.keys(ngramResult).map(ngramKey => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [ngramKey, \": \", ngramResult[ngramKey]]\n          }, ngramKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(TextInput, \"eMUJ3Bh/VO4uH/WopKz0Gg36TXM=\");\n_c = TextInput;\nexport default TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","submitText","getConnectionCount","jsxDEV","_jsxDEV","TextInput","_s","inputText","setInputText","result","setResult","recentStrings","setRecentStrings","handleSubmit","response","post","text","data","textDataResponse","get","connectionCount","console","log","error","fetchRecentStrings","fetchNgrams","strings","headers","ngrams","children","label","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","recentString","index","ngramResults","ngramResult","Object","keys","ngramKey","_c","$RefreshReg$"],"sources":["C:/Users/mythi/OneDrive/Documents/assignment/frontend/src/TextInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { submitText, getConnectionCount } from './api';\r\n\r\nconst TextInput = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const [recentStrings, setRecentStrings] = useState([]);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Send text to the backend for processing and result\r\n      const response = await axios.post(\r\n        'http://localhost:3000/api/submit-text',\r\n        { text: inputText }\r\n      );\r\n\r\n      // Update the state with the result\r\n      setResult(response.data.result);\r\n\r\n      // Save the submitted text data to the database\r\n      const textDataResponse = await axios.post(\r\n        'http://localhost:3000/api/submit-text-data',\r\n        { text: inputText }\r\n      );\r\n\r\n      // Log the connection\r\n      await axios.get('http://localhost:3000/api/log-connection');\r\n      const connectionCount = await getConnectionCount();\r\n      console.log('Number of connections:', connectionCount);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const fetchRecentStrings = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'http://localhost:3000/api/get-recent-strings'\r\n      );\r\n      setRecentStrings(response.data.recentStrings);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const fetchNgrams = async () => {\r\n    try {\r\n      console.log('Recent Strings:', recentStrings); // Check if recentStrings is populated\r\n      const response = await axios.post(\r\n        'http://localhost:8000/api/process-ngrams',\r\n        {\r\n          strings: recentStrings,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json', // Set the content type to JSON\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data.ngrams);\r\n      \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label=\"Enter Text\"\r\n        value={inputText}\r\n        onChange={(e) => setInputText(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" onClick={handleSubmit}>\r\n        Submit\r\n      </Button>\r\n      <div>{result}</div>\r\n      <Button variant=\"contained\" onClick={fetchRecentStrings}>\r\n        Get Recent 2 Strings\r\n      </Button>\r\n      <Button variant=\"contained\" onClick={fetchNgrams}>\r\n        Process Ngrams\r\n      </Button>\r\n      <div>\r\n        <h2>Recent Strings:</h2>\r\n        <ul>\r\n          {recentStrings.map((recentString, index) => (\r\n            <li key={index}>{recentString}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h2>Ngram Comparison Results:</h2>\r\n        {/* Display ngram comparison results */}\r\n        <ul>\r\n          {ngramResults.map((ngramResult, index) => (\r\n            <li key={index}>\r\n              {Object.keys(ngramResult).map((ngramKey) => (\r\n                <p key={ngramKey}>\r\n                  {ngramKey}: {ngramResult[ngramKey]}\r\n                </p>\r\n              ))}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}