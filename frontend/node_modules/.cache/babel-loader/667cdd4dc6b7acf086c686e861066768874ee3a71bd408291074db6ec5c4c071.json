{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mythi\\\\OneDrive\\\\Documents\\\\assignment\\\\frontend\\\\src\\\\TextInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { submitText, getConnectionCount } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInput = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState('');\n  const [recentStrings, setRecentStrings] = useState([]);\n  const [ngramComparisonResults, setNgramComparisonResults] = useState([]);\n  const handleSubmit = async () => {\n    try {\n      // Send text to the backend for processing and result\n      const response = await axios.post('http://localhost:3000/api/submit-text', {\n        text: inputText\n      });\n\n      // Update the state with the result\n      setResult(response.data.result);\n\n      // Save the submitted text data to the database\n      const textDataResponse = await axios.post('http://localhost:3000/api/submit-text-data', {\n        text: inputText\n      });\n\n      // Log the connection\n      await axios.get('http://localhost:3000/api/log-connection');\n      const connectionCount = await getConnectionCount();\n      console.log('Number of connections:', connectionCount);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchRecentStrings = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/get-recent-strings');\n      setRecentStrings(response.data.recentStrings);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleGetNgrams = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/ngrams-comparison');\n      setNgramComparisonResults(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Text\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: fetchRecentStrings,\n      children: \"Get Recent 2 Strings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetNgrams,\n      children: \"Get Ngrams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ngramComparisonResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(result)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TextInput, \"GqDML6ghJCyrfZ8jCqNUB2bwdVo=\");\n_c = TextInput;\nexport default TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","submitText","getConnectionCount","jsxDEV","_jsxDEV","TextInput","_s","inputText","setInputText","result","setResult","recentStrings","setRecentStrings","ngramComparisonResults","setNgramComparisonResults","handleSubmit","response","post","text","data","textDataResponse","get","connectionCount","console","log","error","fetchRecentStrings","handleGetNgrams","results","children","label","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","index","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/mythi/OneDrive/Documents/assignment/frontend/src/TextInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { submitText, getConnectionCount } from './api';\r\n\r\nconst TextInput = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const [recentStrings, setRecentStrings] = useState([]);\r\n  const [ngramComparisonResults, setNgramComparisonResults] = useState([]);\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Send text to the backend for processing and result\r\n      const response = await axios.post(\r\n        'http://localhost:3000/api/submit-text',\r\n        { text: inputText }\r\n      );\r\n\r\n      // Update the state with the result\r\n      setResult(response.data.result);\r\n\r\n      // Save the submitted text data to the database\r\n      const textDataResponse = await axios.post(\r\n        'http://localhost:3000/api/submit-text-data',\r\n        { text: inputText }\r\n      );\r\n\r\n      // Log the connection\r\n      await axios.get('http://localhost:3000/api/log-connection');\r\n      const connectionCount = await getConnectionCount();\r\n      console.log('Number of connections:', connectionCount);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const fetchRecentStrings = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'http://localhost:3000/api/get-recent-strings'\r\n      );\r\n      setRecentStrings(response.data.recentStrings);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleGetNgrams = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'http://localhost:8000/api/ngrams-comparison'\r\n      );\r\n      setNgramComparisonResults(response.data.results);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label=\"Enter Text\"\r\n        value={inputText}\r\n        onChange={(e) => setInputText(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" onClick={handleSubmit}>\r\n        Submit\r\n      </Button>\r\n      <div>{result}</div>\r\n      <Button variant=\"contained\" onClick={fetchRecentStrings}>\r\n        Get Recent 2 Strings\r\n      </Button>\r\n      <button onClick={handleGetNgrams}>Get Ngrams</button>\r\n      <div>\r\n        {ngramComparisonResults.map((result, index) => (\r\n          <div key={index}>{JSON.stringify(result)}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}